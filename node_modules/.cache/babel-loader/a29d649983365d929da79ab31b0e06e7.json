{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _idgen = _interopRequireDefault(require(\"./idgen\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox(props) {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).call(this, props));\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var indeterminate = this.props.indeterminate;\n\n      if (this._input && indeterminate) {\n        this._input.indeterminate = indeterminate;\n        this._input.checked = false;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.indeterminate !== this.props.indeterminate) {\n        this._input.indeterminate = this.props.indeterminate;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          className = _this$props.className,\n          indeterminate = _this$props.indeterminate,\n          filledIn = _this$props.filledIn,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange,\n          checked = _this$props.checked,\n          value = _this$props.value,\n          label = _this$props.label;\n      var computedId = id || (0, _idgen.default)();\n\n      if (indeterminate) {\n        computedId = \"indeterminate-checkbox-\".concat((0, _idgen.default)());\n      }\n\n      return _react.default.createElement(\"label\", {\n        htmlFor: computedId\n      }, _react.default.createElement(\"input\", {\n        id: computedId,\n        className: (0, _classnames.default)({\n          'filled-in': filledIn\n        }, className),\n        disabled: disabled,\n        onChange: onChange,\n        type: \"checkbox\",\n        checked: checked,\n        value: value,\n        ref: function ref(input) {\n          return _this._input = input;\n        }\n      }), _react.default.createElement(\"span\", null, label));\n    }\n  }]);\n\n  return Checkbox;\n}(_react.Component);\n\nCheckbox.propTypes = {\n  className: _propTypes.default.string,\n\n  /*\n   * checkbox value\n   */\n  value: _propTypes.default.string.isRequired,\n\n  /*\n   * filled-in styled checkbox\n   */\n  filledIn: _propTypes.default.bool,\n\n  /*\n   * label next to checkbox\n   */\n  label: _propTypes.default.string.isRequired,\n\n  /*\n   * Indeterminate Style\n   */\n  indeterminate: _propTypes.default.bool,\n\n  /*\n   * onChange callback\n   */\n  onChange: _propTypes.default.func,\n\n  /*\n   * override id\n   * @default idgen()\n   */\n  id: _propTypes.default.string,\n\n  /*\n   * disabled input\n   */\n  disabled: _propTypes.default.bool,\n\n  /*\n   * A Boolean attribute indicating whether or not this checkbox is checked\n   */\n  checked: _propTypes.default.bool\n};\nvar _default = Checkbox;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}