{"ast":null,"code":"import _slicedToArray from \"/Users/mascagli/Desktop/Hyperflix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/mascagli/Desktop/Hyperflix/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mascagli/Desktop/Hyperflix/src/containers/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\nconst initialState = {\n  loading: true,\n  movies: [],\n  errorMessage: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return _objectSpread({}, state, {\n        loading: true,\n        errorMessage: null\n      });\n\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return _objectSpread({}, state, {\n        loading: false,\n        movies: action.payload\n      });\n\n    case \"SEARCH_MOVIES_FAILURE\":\n      return _objectSpread({}, state, {\n        loading: false,\n        errorMessage: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      dispatch({\n        type: \"SEARCH_MOVIES_SUCCESS\",\n        payload: jsonResponse.Search\n      });\n    });\n  }, []); // you can add this to the onClick listener of the Header component\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n    fetch(\"https://www.omdbapi.com/?s=\".concat(searchValue, \"&apikey=4a3b711b\")).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: jsonResponse.Search\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_MOVIES_FAILURE\",\n          error: jsonResponse.Error\n        });\n      }\n    });\n  };\n\n  const movies = state.movies,\n        errorMessage = state.errorMessage,\n        loading = state.loading;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"HOOKED\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"App-intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Sharing a few of our favourite movies\"), React.createElement(\"div\", {\n    className: \"movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, loading && !errorMessage ? React.createElement(\"img\", {\n    className: \"spinner\",\n    src: spinner,\n    alt: \"Loading spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, errorMessage) : movies.map((movie, index) => React.createElement(Movie, {\n    key: \"\".concat(index, \"-\").concat(movie.Title),\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mascagli/Desktop/Hyperflix/src/containers/Search.js"],"names":["React","useReducer","useEffect","Header","Movie","Search","MOVIE_API_URL","initialState","loading","movies","errorMessage","reducer","state","action","type","payload","error","App","dispatch","fetch","then","response","json","jsonResponse","refreshPage","window","location","reload","search","searchValue","Response","Error","spinner","map","movie","index","Title"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\nconst initialState = {\n  loading: true,\n  movies: [],\n  errorMessage: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: null\n      };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        movies: action.payload\n      };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: jsonResponse.Search\n        });\n      });\n  }, []);\n\n  // you can add this to the onClick listener of the Header component\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          dispatch({\n            type: \"SEARCH_MOVIES_SUCCESS\",\n            payload: jsonResponse.Search\n          });\n        } else {\n          dispatch({\n            type: \"SEARCH_MOVIES_FAILURE\",\n            error: jsonResponse.Error\n          });\n        }\n      });\n  };\n\n  const { movies, errorMessage, loading } = state;\n\n  return (\n    <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <img className=\"spinner\" src={spinner} alt=\"Loading spinner\" />\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}