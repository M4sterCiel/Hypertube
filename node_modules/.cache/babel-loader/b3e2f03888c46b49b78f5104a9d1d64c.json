{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n    _this.initSlider = _this.initSlider.bind(_assertThisInitialized(_this));\n    _this.fullscreenReset = _this.fullscreenReset.bind(_assertThisInitialized(_this));\n    _this.setActiveIndex = _this.setActiveIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"initSlider\",\n    value: function initSlider() {\n      if (typeof M !== 'undefined') {\n        this.instance = M.Slider.init(this._slider, this.props.options);\n      }\n    }\n    /**\n     * If the slider was not in fullscreen, the height is set as a style attribute\n     * on the Slider element. When `.destroy()` is called, this attribute is not\n     * removed, resulting in a fullscreen displayed incorrectly.\n     */\n\n  }, {\n    key: \"fullscreenReset\",\n    value: function fullscreenReset(wasFullscreen) {\n      if (!wasFullscreen && this.props.fullscreen) {\n        this.instance.el.removeAttribute('style');\n        this.instance.el.childNodes[0].removeAttribute('style');\n      }\n    }\n  }, {\n    key: \"setActiveIndex\",\n    value: function setActiveIndex(activeIndex) {\n      var indicators = this.props.options.indicators; // In case this option is not defined, we assume true, as per default\n\n      var showIndicators = typeof indicators === 'undefined' || indicators;\n\n      if (showIndicators && activeIndex) {\n        this.instance['$indicators'][activeIndex].className = 'indicator-item active';\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initSlider();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.instance) return;\n      var activeIndex = this.instance.activeIndex;\n      this.instance.destroy();\n      this.fullscreenReset(prevProps.fullscreen);\n      this.initSlider(); // keep indicator at current index displayed\n\n      this.setActiveIndex(activeIndex);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          fullscreen = _this$props.fullscreen,\n          children = _this$props.children,\n          className = _this$props.className;\n      var classes = {\n        fullscreen: fullscreen,\n        slider: true\n      };\n      return _react.default.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2._slider = node;\n        },\n        className: (0, _classnames.default)(classes, className)\n      }, _react.default.createElement(\"ul\", {\n        className: \"slides\"\n      }, children));\n    }\n  }]);\n\n  return Slider;\n}(_react.Component);\n\nSlider.propTypes = {\n  className: _propTypes.default.string,\n  children: _propTypes.default.node,\n\n  /**\n   * Whether or not the Slider should be fullscreen\n   * @default false\n   */\n  fullscreen: _propTypes.default.bool,\n  options: _propTypes.default.shape({\n    /**\n     * Set to false to hide slide indicators\n     * @default true\n     */\n    indicators: _propTypes.default.bool,\n\n    /**\n     * The interval between transitions in ms\n     * @default 6000\n     */\n    interval: _propTypes.default.number,\n\n    /**\n     * The duration of the transation animation in ms\n     * @default 500\n     */\n    duration: _propTypes.default.number,\n\n    /**\n     * The height of the Slider window\n     * @default 400\n     */\n    height: _propTypes.default.number\n  })\n};\nSlider.defaultProps = {\n  fullscreen: false,\n  options: {\n    indicators: true,\n    interval: 6000,\n    duration: 500,\n    height: 400\n  }\n};\nvar _default = Slider;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}